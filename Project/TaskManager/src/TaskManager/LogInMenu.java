/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package TaskManager;

/**
 *
 * @author Matt
 */
public class LogInMenu extends javax.swing.JFrame {
    //Locally saved username that'll be used for all functions
    //Keeps track of which user is being accessed
    private String userInput;
    
    //Sets the username name
    public void setUsernameInput(String usernameInput) {
        this.userInput = usernameInput;
    }
    

    /**
     * Creates new form LogInMenu
     */
    public LogInMenu() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        usernameInput = new javax.swing.JTextField();
        passwordInput = new javax.swing.JPasswordField();
        Username = new javax.swing.JLabel();
        Password = new javax.swing.JLabel();
        Welcome = new javax.swing.JLabel();
        logInButton = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        showTask = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        showStatus = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        taskToAdd = new javax.swing.JTextField();
        addTask = new javax.swing.JButton();
        moveTask = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        errorBox = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Task Manager!");

        usernameInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameInputActionPerformed(evt);
            }
        });

        Username.setText("Username");

        Password.setText("Password");

        Welcome.setText("WELCOME TO THE TASK MANAGER!");

        logInButton.setText("Log In");
        logInButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logInButtonActionPerformed(evt);
            }
        });

        exitButton.setText("Exit");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        showTask.setColumns(20);
        showTask.setRows(5);
        jScrollPane2.setViewportView(showTask);

        showStatus.setColumns(20);
        showStatus.setRows(5);
        jScrollPane3.setViewportView(showStatus);

        jLabel2.setText("Task to Perform:");

        jLabel3.setText("Status of Task:");

        taskToAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                taskToAddActionPerformed(evt);
            }
        });

        addTask.setText("Add Task");
        addTask.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addTaskActionPerformed(evt);
            }
        });

        moveTask.setText("Move Task");
        moveTask.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moveTaskActionPerformed(evt);
            }
        });

        jLabel1.setText("Enter The Task To Add or Change");

        errorBox.setColumns(20);
        errorBox.setRows(5);
        jScrollPane1.setViewportView(errorBox);

        jLabel4.setText("Helpful Information:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(passwordInput, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(54, 54, 54)
                        .addComponent(addTask, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(moveTask, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(logInButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(exitButton))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Username, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(142, 142, 142)
                        .addComponent(jLabel1))
                    .addComponent(Welcome, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(64, 64, 64)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(usernameInput, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Password, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(47, 47, 47)
                        .addComponent(taskToAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(Welcome, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Username)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(taskToAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(usernameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(Password)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addTask)
                    .addComponent(moveTask))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(logInButton)
                    .addComponent(exitButton))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(21, 21, 21))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void usernameInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameInputActionPerformed
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_usernameInputActionPerformed
    
    //Log in button. Saves the username, and updates the tasks and status.
    private void logInButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logInButtonActionPerformed
        //Local variables to hold task and status.
        String tempTask = new String();
        String tempStatus = new String();
        
        //Sets the username for all functionality
        setUsernameInput(usernameInput.getText());
        
        //Updates the tasks for the user
        tempTask = Storage.retrieveFromTable(userInput);
        showTask.setText(tempTask);
        
        //Updates the status of the tasks for the user
        tempStatus = Storage.retrieveFromStatusTable(userInput);
        showStatus.setText(tempStatus);
    }//GEN-LAST:event_logInButtonActionPerformed

    //Quits the program
    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_exitButtonActionPerformed

    //Add task button. Adds a task only within the To Do status
    private void addTaskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addTaskActionPerformed
        //Local variables to handle the tasks and status.
        String temp = taskToAdd.getText();
        String tempTasks = new String();
        String tempStatus = new String();
        
        //Inputs the new task under To Do
        Storage.insertToTable(userInput, temp, "To Do");
        
        //Saves the updated tasks and status
        tempTasks = Storage.retrieveFromTable(userInput);
        tempStatus = Storage.retrieveFromStatusTable(userInput);
        
        //Shows updated task and status
        showTask.setText(tempTasks);
        showStatus.setText(tempStatus);
    }//GEN-LAST:event_addTaskActionPerformed

    private void taskToAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_taskToAddActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_taskToAddActionPerformed

    //Moves a task's status.
    private void moveTaskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moveTaskActionPerformed
        //Local variables to keep track of the task and status being altered
        String tempTask = taskToAdd.getText();
        String tempStatus = Storage.retrieveSingleStatusTable(userInput, tempTask);
        
        //If the task isn't in the list, display helpful message.
        if(tempStatus.isEmpty()){
            errorBox.setText("ERROR!" +"\n" + "TASK NOT FOUND"+"\n"+"IN LIST");
            return;
        }
        
        //If status is To Do, deletes, and inserts as In Progress
        if(tempStatus.equals("To Do")){
            Storage.deleteFromTable(userInput, tempTask);
            Storage.insertToTable(userInput, tempTask, "In Progress");
            //Updated tasks and status for the given user
            String updateTasks = Storage.retrieveFromTable(userInput);
            String updateStatus = Storage.retrieveFromStatusTable(userInput);
        
            //Displays the updated tasks and status for the given user
            showTask.setText(updateTasks);
            showStatus.setText(updateStatus);
            errorBox.setText(" ");
            return;
        }
        
        //If status is In Progress, deletes and inputs as Done
        if(tempStatus.equals("In Progress")){
            Storage.deleteFromTable(userInput, tempTask);
            Storage.insertToTable(userInput, tempTask, "Done");
            
            //Updated tasks and status for the given user
            String updateTasks = Storage.retrieveFromTable(userInput);
            String updateStatus = Storage.retrieveFromStatusTable(userInput);
        
            //Displays the updated tasks and status for the given user
            showTask.setText(updateTasks);
            showStatus.setText(updateStatus);
            errorBox.setText(" ");
            return;
        }
        
        //If status is Done, just removes the Task from the database
        if(tempStatus.equals("Done")){
            Storage.deleteFromTable(userInput, tempTask);
            //Updated tasks and status for the given user
            String updateTasks = Storage.retrieveFromTable(userInput);
            String updateStatus = Storage.retrieveFromStatusTable(userInput);
        
            //Displays the updated tasks and status for the given user
            showTask.setText(updateTasks);
            showStatus.setText(updateStatus);
            errorBox.setText(" ");
            return;
        }
        
        
        
        /*Updated tasks and status for the given user
        String updateTasks = Storage.retrieveFromTable(userInput);
        String updateStatus = Storage.retrieveFromStatusTable(userInput);
        
        //Displays the updated tasks and status for the given user
        showTask.setText(updateTasks);
        showStatus.setText(updateStatus);
        */
    }//GEN-LAST:event_moveTaskActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LogInMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LogInMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LogInMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LogInMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LogInMenu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Password;
    private javax.swing.JLabel Username;
    private javax.swing.JLabel Welcome;
    private javax.swing.JButton addTask;
    private javax.swing.JTextArea errorBox;
    private javax.swing.JButton exitButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton logInButton;
    private javax.swing.JButton moveTask;
    private javax.swing.JPasswordField passwordInput;
    private javax.swing.JTextArea showStatus;
    private javax.swing.JTextArea showTask;
    private javax.swing.JTextField taskToAdd;
    private javax.swing.JTextField usernameInput;
    // End of variables declaration//GEN-END:variables
}
